(function(){var Analyser,AudioBufferSource,BiquadFilter,ChannelMerger,ChannelSplitter,Convolver,Delay,DynamicsCompressor,Gain,MediaElementSource,Mooog,MooogAudioNode,Oscillator,Panner,ScriptProcessor,StereoPanner,Track,WaveShaper,slice=[].slice,extend=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},hasProp={}.hasOwnProperty,bind=function(fn,me){return function(){return fn.apply(me,arguments)}};MooogAudioNode=function(){function MooogAudioNode(_instance,config){if(this._instance=_instance,this._destination=this._instance._destination,this.context=this._instance.context,this._nodes=[],this.config_defaults={connect_to_destination:!0},this.config={},this._connections=[],this._exposed_properties={},"MooogAudioNode"===this.constructor.name){if(null!=Mooog.LEGAL_NODES[config.node_type])return new Mooog.LEGAL_NODES[config.node_type](this._instance,config);throw new Error("Omitted or undefined node type in config options.")}this.configure_from(config),this.before_config(config),this.zero_node_setup(config),this.after_config(config)}return MooogAudioNode.prototype.configure_from=function(ob){var k,ref,v;this.node_type=null!=ob.node_type?ob.node_type:this.constructor.name,this.id=null!=ob.id?ob.id:this.new_id(),ref=this.config_defaults;for(k in ref)v=ref[k],this.config[k]=k in ob?ob[k]:this.config_defaults[k];return this.config},MooogAudioNode.prototype.zero_node_settings=function(ob){var k,v,zo;zo={};for(k in ob)v=ob[k],k in this.config_defaults||"node_type"===k||"id"===k||(zo[k]=v);return zo},MooogAudioNode.prototype.zero_node_setup=function(config){var k,ref,results,v;null!=this._nodes[0]&&this.expose_properties_of(this._nodes[0]),ref=this.zero_node_settings(config),results=[];for(k in ref)v=ref[k],this.debug("zero node settings, "+k+" = "+v),results.push(this.param(k,v));return results},MooogAudioNode.prototype.toString=function(){return this.node_type+"#"+this.id},MooogAudioNode.prototype.new_id=function(){return this.node_type+"_"+Math.round(1e5*Math.random())},MooogAudioNode.prototype.__typeof=function(thing){return thing instanceof AudioParam?"AudioParam":thing instanceof AudioNode?"AudioNode":thing instanceof AudioBuffer?"AudioBuffer":thing instanceof PeriodicWave?"PeriodicWave":thing instanceof AudioListener?"AudioListener":thing instanceof MooogAudioNode?"MooogAudioNode":typeof thing},MooogAudioNode.prototype.insert_node=function(node,ord){var length;if(length=this._nodes.length,null==ord&&(ord=length),null!=node._destination&&node.disconnect(node._destination),ord>length)throw new Error("Invalid index given to insert_node: "+ord+" out of "+length);return this.debug("insert_node of "+this+" for",node,ord),0===ord&&(this.connect_incoming(node),this.disconnect_incoming(this._nodes[0]),length>0&&(node.connect(this.to(this._nodes[0])),this.debug("- node.connect to ",this._nodes[0]))),ord===length&&(0!==ord&&this.safely_disconnect(this._nodes[ord-1],this.from(this._destination)),0!==ord&&this.debug("- disconnect ",this._nodes[ord-1],"from",this._destination),this.config.connect_to_destination&&(node.connect(this.to(this._destination)),this.debug("- connect",node,"to",this._destination)),0!==ord&&this._nodes[ord-1].connect(this.to(node)),0!==ord&&this.debug("- connect",this._nodes[ord-1],"to",node)),ord!==length&&0!==ord&&(this.safely_disconnect(this._nodes[ord-1],this.from(this._nodes[ord])),this.debug("- disconnect",this._nodes[ord-1],"from",this._nodes[ord]),this._nodes[ord-1].connect(this.to(node)),this.debug("- connect",this._nodes[ord-1],"to",node),node.connect(this.to(this._nodes[ord])),this.debug("- connect",node,"to",this._nodes[ord])),this._nodes.splice(ord,0,node),this.debug("- spliced:",this._nodes)},MooogAudioNode.prototype.delete_node=function(ord){var del,length;if(null!=ord){if(length=this._nodes.length,ord>length-1)throw new Error("Invalid index given to delete_node: "+ord+" out of "+length);return this.debug("delete of "+this+" for position",ord),0!==ord&&this.safely_disconnect(this._nodes[ord-1],this.from(this._nodes[ord])),length-1>ord&&this.safely_disconnect(this._nodes[ord],this.from(this._nodes[ord+1])),ord===length-1&&this.safely_disconnect(this._nodes[ord],this.from(this._destination)),del=this._nodes.splice(ord,1),delete del[0],this.debug("remove node at index "+ord)}},MooogAudioNode.prototype.add=function(nodes){var i,j,len,results;for(nodes instanceof Array||(nodes=[nodes]),results=[],j=0,len=nodes.length;len>j;j++)switch(i=nodes[j],this.__typeof(i)){case"MooogAudioNode":results.push(this.insert_node(i));break;case"object":results.push(this.insert_node(this._instance.node(i)));break;default:throw new Error("Unknown argument type (should be config object or MooogAudioNode)")}return results},MooogAudioNode.prototype.connect_incoming=function(){},MooogAudioNode.prototype.disconnect_incoming=function(){},MooogAudioNode.prototype.connect=function(node,output,input,return_this){var target;switch(null==output&&(output=0),null==input&&(input=0),null==return_this&&(return_this=!0),this.debug("called connect from "+this+" to "+node+", "+output),this.__typeof(node)){case"AudioParam":return this._nodes[this._nodes.length-1].connect(node,output),this;case"string":node=this._instance.node(node),target=node._nodes[0];break;case"MooogAudioNode":target=node._nodes[0];break;case"AudioNode":target=node;break;default:throw new Error("Unknown node type passed to connect")}switch(this._connections.push([node,output,input]),!1){case"string"!=typeof output:this._nodes[this._nodes.length-1].connect(target[output],input);break;case"number"!=typeof output:this._nodes[this._nodes.length-1].connect(target,output,input)}return return_this?this:node},MooogAudioNode.prototype.chain=function(node,output,input){if(null==output&&(output=0),null==input&&(input=0),"AudioParam"===this.__typeof(node)&&"string"!=typeof output)throw new Error("MooogAudioNode.chain() can only target AudioParams when used with the signature .chain(target_node:Node, target_param_name:string)");return this.disconnect(this._destination),this.connect(node,output,input,!1)},MooogAudioNode.prototype.to=function(node){switch(this.__typeof(node)){case"MooogAudioNode":return node._nodes[0];case"AudioNode":return node;default:throw new Error("Unknown node type passed to connect")}},MooogAudioNode.prototype.from=MooogAudioNode.prototype.to,MooogAudioNode.prototype.expose_properties_of=function(node){var key,results,val;this.debug("exposing",node),results=[];for(key in node)if(val=node[key],null==this[key]||this._exposed_properties[key])switch(this._exposed_properties[key]=!0,this.__typeof(val)){case"function":results.push(this[key]=val.bind(node));break;case"AudioParam":results.push(this[key]=val);break;case"string":case"number":case"boolean":case"object":results.push(function(o,node,key){return Object.defineProperty(o,key,{get:function(){return node[key]},set:function(val){return node[key]=val},enumerable:!0,configurable:!0})}(this,node,key));break;default:results.push(void 0)}return results},MooogAudioNode.prototype.safely_disconnect=function(node1,node2,output,input){var e,source,target;switch(null==output&&(output=0),null==input&&(input=0),this.__typeof(node1)){case"MooogAudioNode":source=node1._nodes[node1._nodes.length-1];break;case"AudioNode":case"AudioParam":source=node1;break;case"string":source=this._instance.node(node1);break;default:throw new Error("Unknown node type passed to disconnect")}switch(this.__typeof(node2)){case"MooogAudioNode":target=node2._nodes[0];break;case"AudioNode":case"AudioParam":target=node2;break;case"string":target=this._instance.node(node2);break;default:throw new Error("Unknown node type passed to disconnect")}try{source.disconnect(target,output,input)}catch(_error){e=_error,this.debug("ignored InvalidAccessError disconnecting "+target+" from "+source)}return this},MooogAudioNode.prototype.disconnect=function(node,output,input){return null==output&&(output=0),null==input&&(input=0),this.safely_disconnect(this,node,output,input)},MooogAudioNode.prototype.param=function(key,val){var at,cancel,duration,extra,from_now,k,rampfun,ref,ref1,ref2,ref3,ref4,timeConstant,v;if("object"===this.__typeof(key)){switch(at=parseFloat(key.at)||0,timeConstant=null!=key.timeConstant?parseFloat(key.timeConstant):!1,duration=key.duration?parseFloat(key.duration):!1,cancel=!!key.cancel,from_now=!!key.from_now,this.debug("keyramp",key.ramp),key.ramp){case"linear":ref=["linearRampToValueAtTime",!1],rampfun=ref[0],extra=ref[1];break;case"curve":ref1=["setValueCurveAtTime",duration],rampfun=ref1[0],extra=ref1[1];break;case"expo":timeConstant?(ref2=["setTargetAtTime",timeConstant],rampfun=ref2[0],extra=ref2[1]):(ref3=["exponentialRampToValueAtTime",!1],rampfun=ref3[0],extra=ref3[1]);break;default:ref4=["setValueAtTime",!1],rampfun=ref4[0],extra=ref4[1]}for(k in key)v=key[k],this.get_set(k,v,rampfun,at,cancel,from_now,extra);return this}return this.get_set(key,val,"setValueAtTime",0,!0)},MooogAudioNode.prototype.get_set=function(key,val,rampfun,at,cancel,from_now,extra){if(null!=this[key]||this.hasOwnProperty(key))switch(this.__typeof(this[key])){case"AudioParam":if(null!=val){switch(cancel&&this[key].cancelScheduledValues(0),0===val&&(val=this._instance.config.fake_zero),val instanceof Array&&(val=new Float32Array(val)),rampfun){case"linearRampToValueAtTime":case"exponentialRampToValueAtTime":from_now&&this[key].setValueAtTime(this[key].value,this.context.currentTime),this[key][rampfun](val,this.context.currentTime+at);break;case"setValueAtTime":this[key][rampfun](val,this.context.currentTime+at);break;case"setValueCurveAtTime":this[key][rampfun](val,this.context.currentTime+at,extra);break;case"setTargetAtTime":this[key][rampfun](val,this.context.currentTime+at,extra)}return this}return this[key].value;default:return null!=val?(this[key]=val,this):this[key]}},MooogAudioNode.prototype.define_buffer_source_properties=function(){return this._buffer_source_file_url="",Object.defineProperty(this,"buffer_source_file",{get:function(){return this._buffer_source_file_url},set:function(_this){return function(filename){var request;return request=new XMLHttpRequest,request.open("GET",filename,!0),request.responseType="arraybuffer",request.onload=function(){return _this.debug("loaded "+filename),_this._buffer_source_file_url=filename,_this._instance.context.decodeAudioData(request.response,function(buffer){return _this.debug("setting buffer",buffer),_this.buffer=buffer},function(error){throw new Error("Could not decode audio data from "+request.responseURL+" - unsupported file format?")})},request.send()}}(this),enumerable:!0,configurable:!0})},MooogAudioNode.prototype.define_readonly_property=function(prop_name,func){return Object.defineProperty(this,prop_name,{get:func,set:function(){throw new Error(this+"."+prop_name+" is read-only")},enumerable:!0,configurable:!1})},MooogAudioNode.prototype.adsr=function(param,config){var _0,a,base,ramp,s,t,times;switch("string"==typeof param&&(param=this[param]),_0=this._instance.config.fake_zero,base=config.base,times=config.times,a=config.a,s=config.s,null==base&&(base=_0),0===base&&(base=_0),null==a&&(a=1),0===a&&(a=_0),null==s&&(s=1),0===s&&(s=_0),t=this.context.currentTime,times[0]||(times[0]=_0),times[1]||(times[1]=_0),times.length>2&&(times[2]||(times[2]=_0)),times.length>3&&(times[3]||(times[3]=_0)),null==config.ramp&&(config.ramp=this._instance.config.default_ramp_type),config.ramp){case"linear":ramp=param.linearRampToValueAtTime.bind(param);break;case"expo":ramp=param.exponentialRampToValueAtTime.bind(param)}return 2===times.length?(param.cancelScheduledValues(t),param.setValueAtTime(base,t),ramp(a,t+times[0]),ramp(s,t+times[0]+times[1])):3===times.length?(param.cancelScheduledValues(t),param.setValueAtTime(base,t),ramp(a,t+times[0]),param.setValueAtTime(a,t+times[0]+times[1]),ramp(base,t+times[0]+times[1]+times[2])):(param.cancelScheduledValues(t),param.setValueAtTime(base,t),ramp(a,t+times[0]),ramp(s,t+times[0]+times[1]),param.setValueAtTime(s,t+times[0]+times[1]+times[2]),ramp(base,t+times[0]+times[1]+times[2]+times[3]))},MooogAudioNode.prototype.debug=function(){var a;return a=1<=arguments.length?slice.call(arguments,0):[],this._instance.config.debug?console.log.apply(console,a):void 0},MooogAudioNode}(),Analyser=function(superClass){function Analyser(_instance,config){this._instance=_instance,null==config&&(config={}),Analyser.__super__.constructor.apply(this,arguments)}return extend(Analyser,superClass),Analyser.prototype.before_config=function(config){return this.insert_node(this.context.createAnalyser(),0)},Analyser.prototype.after_config=function(config){},Analyser}(MooogAudioNode),AudioBufferSource=function(superClass){function AudioBufferSource(_instance,config){this._instance=_instance,null==config&&(config={}),AudioBufferSource.__super__.constructor.apply(this,arguments)}return extend(AudioBufferSource,superClass),AudioBufferSource.prototype.before_config=function(config){return this.insert_node(this.context.createBufferSource(),0),this.define_buffer_source_properties()},AudioBufferSource.prototype.after_config=function(config){return this.insert_node(new Gain(this._instance,{gain:1,connect_to_destination:this.config.connect_to_destination})),this._state="stopped",this.define_readonly_property("state",function(_this){return function(){return _this._state}}(this))},AudioBufferSource.prototype.start=function(){return"playing"===this._state?this:(this._state="playing",this._nodes[1].param("gain",1),this._nodes[0].start())},AudioBufferSource.prototype.stop=function(){var new_source;return"stopped"===this._state?this:(this._state="stopped",this._nodes[1].param("gain",0),new_source=this.context.createBufferSource(),this.clone_AudioNode_properties(this._nodes[0],new_source),this.delete_node(0),this.insert_node(new_source,0),this.expose_properties_of(this._nodes[0]),this)},AudioBufferSource.prototype.clone_AudioNode_properties=function(source,dest){var k,results,v;results=[];for(k in source)switch(v=source[k],this.__typeof(source[k])){case"AudioBuffer":case"boolean":case"number":case"string":results.push(dest[k]=v);break;case"AudioParam":results.push(dest[k].value=v.value);break;default:results.push(void 0)}return results},AudioBufferSource}(MooogAudioNode),BiquadFilter=function(superClass){function BiquadFilter(_instance,config){this._instance=_instance,null==config&&(config={}),BiquadFilter.__super__.constructor.apply(this,arguments)}return extend(BiquadFilter,superClass),BiquadFilter.prototype.before_config=function(config){return this.insert_node(this.context.createBiquadFilter(),0)},BiquadFilter.prototype.after_config=function(config){},BiquadFilter}(MooogAudioNode),ChannelMerger=function(superClass){function ChannelMerger(_instance,config){this._instance=_instance,null==config&&(config={}),this.__numberOfInputs=null!=config.numberOfInputs?config.numberOfInputs:6,delete config.numberOfInputs,ChannelMerger.__super__.constructor.apply(this,arguments)}return extend(ChannelMerger,superClass),ChannelMerger.prototype.before_config=function(config){return this.insert_node(this.context.createChannelMerger(this.__numberOfInputs),0)},ChannelMerger.prototype.after_config=function(config){},ChannelMerger}(MooogAudioNode),ChannelSplitter=function(superClass){function ChannelSplitter(_instance,config){this._instance=_instance,null==config&&(config={}),this.__numberOfOutputs=null!=config.numberOfOutputs?config.numberOfOutputs:6,delete config.numberOfOutputs,ChannelSplitter.__super__.constructor.apply(this,arguments)}return extend(ChannelSplitter,superClass),ChannelSplitter.prototype.before_config=function(config){return this.insert_node(this.context.createChannelSplitter(this.__numberOfOutputs),0)},ChannelSplitter.prototype.after_config=function(config){},ChannelSplitter}(MooogAudioNode),Convolver=function(superClass){function Convolver(_instance,config){this._instance=_instance,null==config&&(config={}),Convolver.__super__.constructor.apply(this,arguments)}return extend(Convolver,superClass),Convolver.prototype.before_config=function(config){return this.insert_node(this.context.createConvolver(),0),this.define_buffer_source_properties()},Convolver.prototype.after_config=function(config){},Convolver}(MooogAudioNode),Delay=function(superClass){function Delay(_instance,config){this._instance=_instance,null==config&&(config={}),Delay.__super__.constructor.apply(this,arguments)}return extend(Delay,superClass),Delay.prototype.before_config=function(config){return this.insert_node(this.context.createDelay(),0),this._feedback_stage=new Gain(this._instance,{connect_to_destination:!1,gain:0}),this._nodes[0].connect(this.to(this._feedback_stage)),this._feedback_stage.connect(this.to(this._nodes[0])),this.feedback=this._feedback_stage.gain},Delay.prototype.after_config=function(config){},Delay}(MooogAudioNode),DynamicsCompressor=function(superClass){function DynamicsCompressor(_instance,config){this._instance=_instance,null==config&&(config={}),DynamicsCompressor.__super__.constructor.apply(this,arguments)}return extend(DynamicsCompressor,superClass),DynamicsCompressor.prototype.before_config=function(config){return this.insert_node(this.context.createDynamicsCompressor(),0)},DynamicsCompressor.prototype.after_config=function(config){},DynamicsCompressor}(MooogAudioNode),Gain=function(superClass){function Gain(_instance,config){this._instance=_instance,null==config&&(config={}),Gain.__super__.constructor.apply(this,arguments)}return extend(Gain,superClass),Gain.prototype.before_config=function(config){return this.insert_node(this.context.createGain(),0),this._nodes[0].gain.value=this._instance.config.default_gain},Gain.prototype.after_config=function(config){},Gain}(MooogAudioNode),MediaElementSource=function(superClass){function MediaElementSource(_instance,config){this._instance=_instance,null==config&&(config={}),MediaElementSource.__super__.constructor.apply(this,arguments)}return extend(MediaElementSource,superClass),MediaElementSource.prototype.before_config=function(config){if(!config.mediaElement)throw new Error("MediaElementSource requires mediaElement config argument");return"string"==typeof config.mediaElement&&(config.mediaElement=document.querySelector(config.mediaElement)),this.insert_node(this.context.createMediaElementSource(config.mediaElement),0)},MediaElementSource.prototype.after_config=function(config){},MediaElementSource}(MooogAudioNode),Oscillator=function(superClass){function Oscillator(_instance,config){this._instance=_instance,null==config&&(config={}),this.__start=bind(this.__start,this),this.__stop=bind(this.__stop,this),Oscillator.__super__.constructor.apply(this,arguments)}return extend(Oscillator,superClass),Oscillator.prototype.before_config=function(config){return this.insert_node(this.context.createOscillator(),0)},Oscillator.prototype.after_config=function(config){return this.insert_node(new Gain(this._instance,{connect_to_destination:this.config.connect_to_destination})),this._is_started=!1,this._state="stopped",this._timeout=!1,this.define_readonly_property("state",function(_this){return function(){return _this._state}}(this))},Oscillator.prototype.start=function(time){return null==time&&(time=0),clearTimeout(this._timeout),"playing"===this._state?this:(0===time?this.__start(time):this._timeout=setTimeout(this.__start,1e3*time),this)},Oscillator.prototype.stop=function(time){return null==time&&(time=0),clearTimeout(this._timeout),"stopped"===this._state?this:(0===time?this.__stop():this._timeout=setTimeout(this.__stop,1e3*time),this)},Oscillator.prototype.__stop=function(){return this._state="stopped",this._nodes[1].gain.value=0,this},Oscillator.prototype.__start=function(){return this._state="playing",this._is_started?this._nodes[1].gain.value=1:(this._nodes[0].start(0),this._is_started=!0),this},Oscillator}(MooogAudioNode),Panner=function(superClass){function Panner(_instance,config){this._instance=_instance,null==config&&(config={}),Panner.__super__.constructor.apply(this,arguments)}return extend(Panner,superClass),Panner.prototype.before_config=function(config){return this.insert_node(this.context.createPanner(),0)},Panner.prototype.after_config=function(config){},Panner}(MooogAudioNode),ScriptProcessor=function(superClass){function ScriptProcessor(_instance,config){this._instance=_instance,null==config&&(config={}),this.__bufferSize=null!=config.bufferSize?config.bufferSize:null,this.__numberOfInputChannels=null!=config.numberOfInputChannels?config.numberOfInputChannels:2,this.__numberOfOuputChannels=null!=config.numberOfOuputChannels?config.numberOfOuputChannels:2,delete config.bufferSize,delete config.numberOfInputChannels,delete config.numberOfOuputChannels,this.debug("ScriptProcessorNode is deprecated and will be replaced by AudioWorker"),ScriptProcessor.__super__.constructor.apply(this,arguments)}return extend(ScriptProcessor,superClass),ScriptProcessor.prototype.before_config=function(config){return this.insert_node(this.context.createScriptProcessor(this.__bufferSize,this.__numberOfInputChannels,this.__numberOfOuputChannels),0)},ScriptProcessor.prototype.after_config=function(config){},ScriptProcessor}(MooogAudioNode),StereoPanner=function(superClass){function StereoPanner(_instance,config){this._instance=_instance,null==config&&(config={}),StereoPanner.__super__.constructor.apply(this,arguments)}return extend(StereoPanner,superClass),StereoPanner.prototype.before_config=function(config){return this.insert_node(this.context.createStereoPanner(),0)},StereoPanner.prototype.after_config=function(config){},StereoPanner}(MooogAudioNode),Track=function(superClass){function Track(_instance,config){this._instance=_instance,null==config&&(config={}),this._sends={},this.debug("initializing track object"),config.node_type="Track",Track.__super__.constructor.apply(this,arguments)}return extend(Track,superClass),Track.prototype.before_config=function(config){return this._pan_stage=this._instance.context.createStereoPanner(),this._gain_stage=this._instance.context.createGain(),this._gain_stage.gain.value=this._instance.config.default_gain,this._pan_stage.connect(this._gain_stage),this._gain_stage.connect(this._destination),this._destination=this._pan_stage,this.gain=this._gain_stage.gain,this.pan=this._pan_stage.pan},Track.prototype.after_config=function(config){},Track.prototype.send=function(id,dest,pre,gain){var new_send,source;return null==pre&&(pre=this._instance.config.default_send_type),null==gain&&(gain=this._instance.config.default_gain),null==dest?this._sends[id]:(source="pre"===pre?this._nodes[this._nodes.length-1]:this._gain_stage,null!=this._sends[id]?this._sends[id]:(this._sends[id]=new_send=new Gain(this._instance,{connect_to_destination:!1,gain:gain}),source.connect(this.to(new_send)),new_send.connect(this.to(dest)),new_send))},Track}(MooogAudioNode),WaveShaper=function(superClass){function WaveShaper(_instance,config){this._instance=_instance,null==config&&(config={}),WaveShaper.__super__.constructor.apply(this,arguments)}return extend(WaveShaper,superClass),WaveShaper.prototype.before_config=function(config){return this.insert_node(this.context.createWaveShaper(),0)},WaveShaper.prototype.after_config=function(config){},WaveShaper.prototype.chebyshev=function(terms,last,current){var el,i,lasttemp,newcurrent;if(null==last&&(last=[1]),null==current&&(current=[1,0]),2>terms)throw new Error("Terms must be 2 or more for chebyshev generator");return current.length===terms?this.poly.apply(this,current):(lasttemp=last,last=current,current=current.map(function(x){return 2*x}),current.push(0),lasttemp.unshift(0,0),lasttemp=lasttemp.map(function(x){return-1*x}),newcurrent=function(){var j,len,results;for(results=[],i=j=0,len=current.length;len>j;i=++j)el=current[i],results.push(lasttemp[i]+current[i]);return results}(),console.log(current,lasttemp,"new cur",newcurrent,this),this.chebyshev(terms,last,newcurrent))},WaveShaper.prototype.poly=function(){var coeffs,curve,i,j,length,p,ref,step;for(coeffs=1<=arguments.length?slice.call(arguments,0):[],length=this._instance.config.curve_length,step=2/(length-1),curve=new Float32Array(length),p=function(x,coeffs){var a,accum,i,j,ref;for(accum=0,i=j=0,ref=coeffs.length-1;ref>=0?ref>=j:j>=ref;i=ref>=0?++j:--j)a=coeffs[i],accum+=a*Math.pow(x,coeffs.length-i-1);return accum},i=j=0,ref=length-1;ref>=0?ref>=j:j>=ref;i=ref>=0?++j:--j)curve[i]=p(i*step-1,coeffs);return curve},WaveShaper.prototype.tanh=function(n){var curve,i,j,length,ref,step;for(length=this._instance.config.curve_length,step=2/(length-1),curve=new Float32Array(length),i=j=0,ref=length-1;ref>=0?ref>=j:j>=ref;i=ref>=0?++j:--j)curve[i]=Math.tanh(Math.PI/2*n*(i*step-1));return curve},WaveShaper}(MooogAudioNode),Mooog=function(){function Mooog(initConfig1){this.initConfig=null!=initConfig1?initConfig1:{},this.config={debug:!1,default_gain:.5,default_ramp_type:"expo",default_send_type:"post",periodic_wave_length:2048,curve_length:65536,fake_zero:1/65536,allow_multiple_audiocontexts:!1},this._BROWSER_CONSTRUCTOR=!1,this.context=this.create_context(),this._destination=this.context.destination,this.init(this.initConfig),Mooog.browser_test(),this.iOS_setup(),this._nodes={},this.__typeof=MooogAudioNode.prototype.__typeof,Mooog.browser_test().all||console.log("AudioContext not fully supported in this browser. Run Mooog.browser_test() for more info")}return Mooog.LEGAL_NODES={Analyser:Analyser,AudioBufferSource:AudioBufferSource,BiquadFilter:BiquadFilter,ChannelMerger:ChannelMerger,ChannelSplitter:ChannelSplitter,Convolver:Convolver,Delay:Delay,DynamicsCompressor:DynamicsCompressor,Gain:Gain,MediaElementSource:MediaElementSource,Oscillator:Oscillator,Panner:Panner,ScriptProcessor:ScriptProcessor,StereoPanner:StereoPanner,WaveShaper:WaveShaper},Mooog.MooogAudioNode=MooogAudioNode,Mooog.prototype.iOS_setup=function(){var body,instantProcess,is_iOS,tmpBuf,tmpProc;return is_iOS=-1!==navigator.userAgent.indexOf("like Mac OS X"),is_iOS?(body=document.body,tmpBuf=this.context.createBufferSource(),tmpProc=this.context.createScriptProcessor(256,1,1),instantProcess=function(){return tmpBuf.start(0),tmpBuf.connect(tmpProc),tmpProc.connect(this.context.destination)},body.addEventListener("touchstart",instantProcess,!1),tmpProc.onaudioprocess=function(){return tmpBuf.disconnect(),tmpProc.disconnect(),body.removeEventListener("touchstart",instantProcess,!1),tmpProc.onaudioprocess=null}):void 0},Mooog.prototype.init=function(initConfig){var key,ref,val;ref=this.config;for(key in ref)val=ref[key],null!=initConfig[key]&&(this.config[key]=initConfig[key]);return null},Mooog.context=!1,Mooog.prototype.create_context=function(){return this._BROWSER_CONSTRUCTOR=function(){switch(!1){case null==window.AudioContext:return"AudioContext";case null==window.webkitAudioContext:return"webkitAudioContext";default:throw new Error("This browser does not yet support the AudioContext API")}}(),this.config.allow_multiple_audiocontexts?new window[this._BROWSER_CONSTRUCTOR]:Mooog.context||(Mooog.context=new window[this._BROWSER_CONSTRUCTOR])},Mooog.prototype.track=function(){var id,node_list,ref;if(id=arguments[0],node_list=2<=arguments.length?slice.call(arguments,1):[],!arguments.length)return new Track(this);if("string"==typeof id){if(node_list.length){if(null!=this._nodes[id])throw new Error(id+" is already assigned to "+this._nodes[id]);return this._nodes[id]=new Track(this,{id:id}),this._nodes[id].add(node_list),this._nodes[id]}if(null!=(null!=(ref=this._nodes)?ref[id]:void 0))return this._nodes[id];throw new Error("No Track found with id "+id)}throw new Error("Track id must be a string")},Mooog.prototype.node=function(){var arg0,arg1,i,j,len,new_node,results,type0,type1;if(arg0=arguments[0],arg1=arguments[1],type0=this.__typeof(arg0),type1=this.__typeof(arg1),"string"===type0&&"string"===type1){if(null!=Mooog.LEGAL_NODES[arg1]){if(this._nodes[arg0])throw new Error(arg0+" is already assigned to "+this._nodes[arg0]);return this._nodes[arg0]=new Mooog.LEGAL_NODES[arg1](this,{id:arg0,node_type:arg1})}throw console.log(arguments),new Error("Unknown node type "+arg1)}if("string"===type0&&"undefined"===type1){if(this._nodes[arg0])return this._nodes[arg0];throw new Error("No MooogAudioNode found with id "+arg0)}if("object"===type0&&"undefined"===type1){if(this._nodes[arg0.id])throw new Error(arg0.id+" is already assigned to "+this._nodes[arg0.id]);if(null!=Mooog.LEGAL_NODES[arg0.node_type])return new_node=new Mooog.LEGAL_NODES[arg0.node_type](this,arg0),this._nodes[new_node.id]=new_node;throw new Error("Omitted or undefined node type in config options.")}if("object"===type0&&"object"===type1)throw new Error("A string id for the base node must be provided if you give more than one node definition");if("string"===type0&&"object"===type1){for(new_node=new MooogAudioNode(this,{id:arg0}),this._nodes[new_node.id]=new_node,results=[],j=0,len=arguments.length;len>j;j++)i=arguments[j],results.push(new_node.add(new MooogAudioNode(this,i)));return results}},Mooog.extend_with=function(nodeName,nodeDef){if(window.nodeDef=nodeDef,null==nodeDef.prototype.before_config)throw new Error("Node definition prototype must have a before_config function");if(null==nodeDef.prototype.after_config)throw new Error("Node definition prototype must have a before_config function");if(null!=Mooog.LEGAL_NODES[nodeName])throw new Error(nodeName+" class already defined");return Mooog.LEGAL_NODES[nodeName]=nodeDef,null},Mooog.freq=function(n){return 440*Math.pow(2,(n-69)/12)},Mooog.prototype.sawtoothPeriodicWave=function(harms){var a,i,imag,j,real,ref;for(null==harms&&(harms=this.config.periodic_wave_length),a=[0],i=j=1,ref=harms-1;ref>=1?ref>=j:j>=ref;i=ref>=1?++j:--j)a.push(1/i);return real=new Float32Array(a),imag=new Float32Array(real.length),this.context.createPeriodicWave(real,imag)},Mooog.prototype.squarePeriodicWave=function(harms){var a,i,imag,j,real,ref;for(null==harms&&(harms=this.config.periodic_wave_length),a=[0],i=j=1,ref=harms-1;ref>=1?ref>=j:j>=ref;i=ref>=1?++j:--j)i%2!==0?a.push(2/(Math.PI*i)):a.push(0);return real=new Float32Array(a),imag=new Float32Array(real.length),this.context.createPeriodicWave(real,imag)},Mooog.prototype.trianglePeriodicWave=function(harms){var a,i,imag,j,real,ref;for(null==harms&&(harms=this.config.periodic_wave_length),a=[0],i=j=1,ref=harms-1;ref>=1?ref>=j:j>=ref;i=ref>=1?++j:--j)i%2!==0?a.push(1/Math.pow(i,2)):a.push(0);return real=new Float32Array(a),imag=new Float32Array(real.length),this.context.createPeriodicWave(real,imag)},Mooog.prototype.sinePeriodicWave=function(harms){var a,imag,real;return a=[0,1],real=new Float32Array(a),imag=new Float32Array(real.length),this.context.createPeriodicWave(real,imag)},Mooog.brower_test_results=!1,Mooog.browser_test=function(){var __t,ctxt,tests;return this.browser_test_results?this.browser_test_results:(ctxt=window.AudioContext||window.webkitAudioContext,__t=new ctxt,tests={all:!0},tests.all=(tests.unprefixed=null!=window.AudioContext)?tests.all:!1,tests.all=(tests.start_stop=null!=__t.createOscillator().start)?tests.all:!1,null==__t.createStereoPanner&&(tests.stereo_panner="patched",this.patch_StereoPanner()),tests.all=(tests.script_processor=null!=__t.createScriptProcessor)?tests.all:!1,this.browser_test_results=tests)},Mooog.patch_StereoPanner=function(){var StereoPannerImpl,WS_CURVE_SIZE,ctxt,curveL,curveR,i,j,ref;for(WS_CURVE_SIZE=4096,curveL=new Float32Array(WS_CURVE_SIZE),curveR=new Float32Array(WS_CURVE_SIZE),i=j=0,ref=WS_CURVE_SIZE;ref>=0?ref>=j:j>=ref;i=ref>=0?++j:--j)curveL[i]=Math.cos(i/WS_CURVE_SIZE*Math.PI*.5),curveR[i]=Math.sin(i/WS_CURVE_SIZE*Math.PI*.5);return StereoPannerImpl=function(){function StereoPannerImpl(audioContext){this.audioContext=audioContext,this.inlet=audioContext.createChannelSplitter(2),this._pan=audioContext.createGain(),this.pan=this._pan.gain,
this._wsL=audioContext.createWaveShaper(),this._wsR=audioContext.createWaveShaper(),this._L=audioContext.createGain(),this._R=audioContext.createGain(),this.outlet=audioContext.createChannelMerger(2),this.inlet.channelCount=2,this.inlet.channelCountMode="explicit",this._pan.gain.value=0,this._wsL.curve=curveL,this._wsR.curve=curveR,this._L.gain.value=0,this._R.gain.value=0,this.inlet.connect(this._L,0),this.inlet.connect(this._R,1),this._L.connect(this.outlet,0,0),this._R.connect(this.outlet,0,1),this._pan.connect(this._wsL),this._pan.connect(this._wsR),this._wsL.connect(this._L.gain),this._wsR.connect(this._R.gain),this._isConnected=!1,this._dc1buffer=null,this._dc1=null}return StereoPannerImpl.prototype.connect=function(destination){var audioContext;return audioContext=this.audioContext,this._isConnected||(this._isConnected=!0,this._dc1buffer=audioContext.createBuffer(1,2,audioContext.sampleRate),this._dc1buffer.getChannelData(0).set([1,1]),this._dc1=audioContext.createBufferSource(),this._dc1.buffer=this._dc1buffer,this._dc1.loop=!0,this._dc1.start(audioContext.currentTime),this._dc1.connect(this._pan)),AudioNode.prototype.connect.call(this.outlet,destination)},StereoPannerImpl.prototype.disconnect=function(){return this.audioContext,this._isConnected&&(this._isConnected=!1,this._dc1.stop(audioContext.currentTime),this._dc1.disconnect(),this._dc1=null,this._dc1buffer=null),AudioNode.prototype.disconnect.call(this.outlet)},StereoPannerImpl}(),StereoPanner=function(){function StereoPanner(audioContext){var impl;return impl=new StereoPannerImpl(audioContext),Object.defineProperties(impl.inlet,{pan:{value:impl.pan,enumerable:!0},connect:{value:function(node){return impl.connect(node)}},disconnect:{value:function(){return impl.disconnect()}}}),impl.inlet}return StereoPanner}(),ctxt=window.AudioContext||window.webkitAudioContext,ctxt&&!ctxt.prototype.hasOwnProperty("createStereoPanner")?ctxt.prototype.createStereoPanner=function(){return new StereoPanner(this)}:void 0},Mooog}(),window.Mooog=Mooog}).call(this);
//# sourceMappingURL=mooog.min.js.map